import numpy as np
a = np.array([[1, 0, 0],
			  [1, 1, 1],
[2, 0, 0]])
print(np.max(a)) #2
print(np.min(a)) #0
print(np.average(a))
# 0.6666666666666666
a = np.array([[1, 0, 0],
			  [1, 1, 1],
[2, 0, 0]])
print(np.max(a)) #2
print(np.min(a)) #0
print(np.average(a))
# 0.6666666666666666

##Однострочное решение на основе простейших арифметических операций с массивами
## Зависимости

import numpy as np
## Данные: годовые зарплаты в тысячах долларов (за 2017, 2018 и 2019 гг.)
alice = [99, 101, 103]
bob = [110, 108, 105]
tim = [90, 88, 85]
salaries = np.array([alice, bob, tim])
taxation = np.array([[0.2, 0.25, 0.22],
					 [0.4, 0.5, 0.5],
					 [0.1, 0.2, 0.1]])#опять же, точка в конце указывает на тип данных float
## Однострочник
max_income = np.max(salaries - salaries * taxation)#Поэлементное произведение двух многомерных массивов называется произведением Адамара.
## Результат
print(max_income)

##Однострочное решение на основе простейших арифметических операций с массивами
## Зависимости

##Примеры одномерных срезов import numpy as np
a = np.array([55, 56, 57, 58, 59, 60, 61])
print(a)
# [55 56 57 58 59 60 61]
print(a[:])
# [55 56 57 58 59 60 61]
print(a[2:])
# [57 58 59 60 61]
print(a[1:4])
# [56 57 58]
print(a[2:-2])
# [57 58 59]
print(a[::2])
# [55 57 59 61]
print(a[1::2])
# [56 58 60]
print(a[::-1])
# [61 60 59 58 57 56 55]
print(a[:1:-2])
# [61 59 57]
print(a[-1:1:-2])
# [61 59 57]